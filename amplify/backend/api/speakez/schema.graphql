# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Message @model {
  id: ID!
  user: User! @hasOne
  userId: ID! @index(name: "byUserMessage", sortKeyFields: ["content"])
  chatroomId: ID! @index(name: "byChatroom", sortKeyFields: ["createdAt"])
  content: String!
  createdAt: String!
}

type User @model {
  id: ID!
  username: String! @index
  about: String
  online: Boolean!
  messages: [Message!]! @hasMany(indexName: "byUserMessage", fields: ["id"])
  chatrooms: [Chatroom!]! @manyToMany(relationName: "userCR")
}

type Chatroom @model {
  id: ID!
  name: String
  meetingId: String
  users: [User!]! @manyToMany(relationName: "userCR")
  messages: [Message!]! @hasMany(indexName: "byChatroom", fields: ["id"])
}

type Mutation {
  createMeeting(region: String): Response
    @function(name: "chimeVCHandler-${env}")
  addAttendee(meetingId: String, userId: String): Response
    @function(name: "chimeVCHandler-${env}")
  endMeeting(meetingId: String): Response
    @function(name: "chimeVCHandler-${env}")
  getMeeting(meetingId: String): Response
    @function(name: "chimeVCHandler-${env}")
}

type Response {
  statusCode: Int!
  body: String
}
